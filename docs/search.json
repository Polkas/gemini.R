[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jinhwan Kim. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim J (2023). gemini.R: R package use Google's gemini via API R. R package version 0.1.0, https://github.com/jhk0530/gemini.studio.","code":"@Manual{,   title = {gemini.R: R package to use Google's gemini via API on R},   author = {Jinhwan Kim},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/jhk0530/gemini.studio}, }"},{"path":"/index.html","id":"geminir","dir":"","previous_headings":"","what":"R package to use Google's gemini via API on R","title":"R package to use Google's gemini via API on R","text":"R package use Google’s gemini via API R","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package to use Google's gemini via API on R","text":"can install development version gemini.R GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jhk0530/gemini.R\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R package to use Google's gemini via API on R","text":"","code":"library(gemini.R)  setAPI(\"your API key\") gemini(\"Explain about the gemini in astrology in one line\")  # text  # \"Gemini, the third astrological sign, is associated with  # communication, adaptability, and a thirst for knowledge.\""},{"path":"/index.html","id":"gemini-with-image-via-shiny","dir":"","previous_headings":"","what":"gemini with image via Shiny","title":"R package to use Google's gemini via API on R","text":"use gemini_image function, image file required. recommend use shiny app fileInput function.  Note, image Google AI Developers","code":"library(shiny) library(gemini.R)  ui <- fluidPage(   sidebarLayout(     NULL,     mainPanel(       fileInput(         inputId = \"file\",         label = \"Choose file to upload\",       ),       imageOutput(outputId = \"image1\"),       textInput(         inputId = \"prompt\",          label = \"Prompt\",          placeholder = \"Enter Prompts Here\"       ),       actionButton(\"goButton\", \"Ask to gemini\"),       textOutput(\"text1\")     )   ) )  server <- function(input, output) {      observeEvent(input$file, {     path <- input$file$datapath     output$image1 <- renderImage({       list(         src = path       )     }, deleteFile = FALSE)   })      observeEvent(input$goButton, {     output$text1 <- renderText({       gemini_image(input$prompt, input$file$datapath)     })   }) }  shinyApp(ui = ui, server = server)"},{"path":"/reference/gemini.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text with Gemini — gemini","title":"Generate text from text with Gemini — gemini","text":"Generate text text Gemini","code":""},{"path":"/reference/gemini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text with Gemini — gemini","text":"","code":"gemini(prompt)"},{"path":"/reference/gemini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text with Gemini — gemini","text":"prompt prompt generate text ","code":""},{"path":"/reference/gemini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text with Gemini — gemini","text":"Generated text","code":""},{"path":[]},{"path":"/reference/gemini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text from text with Gemini — gemini","text":"","code":"gemini(\"Explain dplyr's mutate functiontext  #> \"The mutate() function in dplyr is a powerful tool for transforming and enriching data frames in R. It allows you to add new columns to a data frame based on existing columns or perform calculations and transformations on existing data.\\n\\nHere's a breakdown of how the mutate() function works:\\n\\n1. **Data Input:** The mutate() function takes a data frame as its first argument. This data frame is the one you want to modify or add new columns to.\\n\\n2. **Transformation Expression:** The second argument to mutate() is a series of expressions that define the transformations you want to perform. These expressions are typically written using the %>% (pipe) operator, which allows you to chain multiple transformations together.\\n\\n3. **Creating New Columns:** Within the transformation expressions, you can use various functions and operators to create new columns. For example, you can use the `mutate()` function to:\\n\\n   - Add a new column based on a calculation, such as `mutate(new_column = old_column * 2)`.\\n   - Create a new column based on a logical condition, such as `mutate(new_column = ifelse(old_column > 10, \\\"High\\\", \\\"Low\\\"))`.\\n   - Combine multiple columns into a new column, such as `mutate(new_column = paste(first_name, last_name, sep = \\\" \\\"))`.\\n\\n4. **Preserving Existing Columns:** By default, the mutate() function preserves all existing columns in the data frame. This means that any new columns you create are added to the existing data frame, and no data is lost.\\n\\n5. **Output:** The output of the mutate() function is a new data frame that contains the original data along with the new columns you created. This new data frame can then be used for further analysis or visualization.\\n\\nHere's an example to illustrate how the mutate() function works:\\n\\n```\\nlibrary(dplyr)\\n\\n# Create a data frame\\ndf <- data.frame(name = c(\\\"John\\\", \\\"Mary\\\", \\\"Bob\\\"), age = c(25, 30, 35))\\n\\n# Add a new column \\\"age_group\\\" based on age\\ndf <- df %>%\\n  mutate(age_group = ifelse(age < 30, \\\"Young\\\", \\\"Old\\\"))\\n\\n# Print the modified data frame\\nprint(df)\\n\\n# Output:\\n#   name age age_group\\n# 1 John  25    Young\\n# 2 Mary  30    Young\\n# 3 Bob   35     Old\\n```\\n\\nIn this example, we used the mutate() function to add a new column called \\\"age_group\\\" to the df data frame. The age_group column classifies individuals as \\\"Young\\\" if their age is less than 30 and \\\"Old\\\" otherwise.\\n\\nThe mutate() function is a versatile tool that can be used for a wide range of data transformation tasks. It is particularly useful when working with large datasets, as it allows you to perform complex transformations efficiently and concisely.\""},{"path":"/reference/gemini_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text and image with Gemini — gemini_image","title":"Generate text from text and image with Gemini — gemini_image","text":"Generate text text image Gemini","code":""},{"path":"/reference/gemini_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text and image with Gemini — gemini_image","text":"","code":"gemini_image(prompt, image)"},{"path":"/reference/gemini_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text and image with Gemini — gemini_image","text":"prompt prompt generate text image image generate text","code":""},{"path":"/reference/gemini_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text and image with Gemini — gemini_image","text":"Generated text","code":""},{"path":[]},{"path":"/reference/gemini_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text from text and image with Gemini — gemini_image","text":"","code":"gemini_image(\"Explain this image\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Sidney_Hall_-_Urania%27s_Mirror_-_Gemini.jpg/560px-Sidney_Hall_-_Urania%27s_Mirror_-_Gemini.jpgtext  #> \" This image is a star chart of the constellation Gemini. The Gemini constellation is named after the Latin word for twins, and is often depicted as two young men, or twin boys. In Greek mythology, the twins are Castor and Pollux.\\n\\nThe image shows the position of the stars in the constellation Gemini, as well as the names of some of the stars. The brightest star in the constellation is Castor, which is located at the top of the head of one of the twins. The second brightest star is Pollux, which is located at the top of the head of the other twin.\\n\\nThe Gemini constellation is located in the northern hemisphere of the sky, and is best seen in the winter months. It is one of the 12 zodiac constellations, and is associated with the astrological sign of Gemini.\""},{"path":"/reference/setAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Set API key — setAPI","title":"Set API key — setAPI","text":"Set API key environment variable","code":""},{"path":"/reference/setAPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set API key — setAPI","text":"","code":"setAPI(api_key)"},{"path":"/reference/setAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set API key — setAPI","text":"api_key API key set","code":""},{"path":[]},{"path":"/reference/setAPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set API key — setAPI","text":"","code":"setAPI(\"my_api_key\")"}]
